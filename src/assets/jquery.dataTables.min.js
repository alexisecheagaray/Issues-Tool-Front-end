if (typeof buildFilterRegex !== "function") {
  function buildFilterRegex(filterValue) {
    if (filterValue.indexOf("&") === -1) {
      return (
        "[~>]\\s*" +
        jQuery.fn.dataTable.util.escapeRegex(filterValue) +
        "\\s*[<~]"
      );
    } else {
      var tempDiv = document.createElement("div");
      tempDiv.innerHTML = filterValue;
      return (
        "\\s*" +
        jQuery.fn.dataTable.util.escapeRegex(tempDiv.innerText) +
        "\\s*"
      );
    }
  }
}
jQuery(document).ready(function () {
  jQuery(".view-filter-btns .dropdown-menu a").click(function (e) {
    var filterValue = jQuery(this).find("span").data("value");
    var filterText = jQuery(this).find("span").html().trim();
    var dataTable = jQuery("#tableTicketsList").DataTable();
    var filterValueRegex;
    $(this).closest(".dropdown-menu").find(".active").removeClass("active");
    $(this).parent().addClass("active");
    $(this)
      .closest(".view-filter-btns")
      .find(".dropdown-toggle span")
      .text(filterText);
    if (filterValue == "all") {
      dataTable.column(2).search("").draw();
    } else {
      filterValueRegex = buildFilterRegex(filterValue);
      dataTable.column(2).search(filterValueRegex, true, false, false).draw();
    }
    // Prevent jumping to the top of the page
    // when no matching tag is found.
    e.preventDefault();
  });
});
function checkAll() {
  let checkAll = $("#selectAll");
  let checkboxes = $(".domids").not(":disabled");
  checkAll.on("ifChecked ifUnchecked", function (e) {
    if (e.type == "ifChecked") {
      checkboxes.iCheck("check");
    } else {
      checkboxes.iCheck("uncheck");
    }
  });
  checkboxes.on("ifChanged", function (e) {
    if (checkboxes.filter(":checked").length > 0) {
      $("#domainSelectedCounter").addClass("badge--primary");
      $(".bottom-action-sticky").css("opacity", "1");
      $("body").addClass("is-actions");
    } else {
      $("#domainSelectedCounter").removeClass("badge--primary");
      $(".bottom-action-sticky").css("opacity", "0");
      $("body").removeClass("is-actions");
    }
    $("#domainSelectedCounter").text(checkboxes.filter(":checked").length);
    if (checkboxes.filter(":checked").length == checkboxes.length) {
      checkAll.prop("checked", "checked");
    } else {
      checkAll.removeProp("checked");
    }
    checkAll.iCheck("update");
  });
}

var alreadyReady = false; // The ready function is being called twice on page load.
jQuery(document).ready(function () {
  var table = jQuery("#tableTicketsList").DataTable({
    dom: '<"listtable"fit>pl',
    info: false,
    responsive: true,
    oLanguage: {
      sEmptyTable: "Ningun ticket encontrado",
      sInfo: "Mostrando _START_ para _END_ de _TOTAL_ tickets",
      sInfoEmpty: "Mostrando 0 para 0 de 0 tickets",
      sInfoFiltered: "(Filtro de _MAX_ tickets)",
      sInfoPostFix: "",
      sInfoThousands: ",",
      sLengthMenu: "Mostrar _MENU_ entradas",
      sLoadingRecords: "Cargando...",
      sProcessing: "Procesando...",
      sSearch: "",
      sZeroRecords: "Ningun ticket encontrado",
      oPaginate: {
        sFirst: "Primero",
        sLast: "Últímo",
        sNext: "Siguiente",
        sPrevious: "Anterior",
      },
    },
    pageLength: 10,
    order: [[0, "asc"]],
    lengthMenu: [
      [10, 25, 50, -1],
      [10, 25, 50, "Todos"],
    ],
    aoColumnDefs: [
      {
        bSortable: false,
        aTargets: [],
      },
      {
        sType: "string",
        aTargets: [2],
      },
    ],
    stateSave: true,
    autoWidth: false,
  });

  // highlight remembered filter on page re-load
  var rememberedFilterTerm = table.state().columns[2].search.search;
  if (rememberedFilterTerm && !alreadyReady) {
    // This should only run on the first "ready" event.
    jQuery(".view-filter-btns a span").each(function (index) {
      if (
        buildFilterRegex(jQuery(this).text().trim()) == rememberedFilterTerm
      ) {
        $(this).closest("li").addClass("active");
        $(this)
          .closest(".view-filter-btns")
          .find(".dropdown-toggle span")
          .text(jQuery(this).text());
      }
    });
  }
  alreadyReady = true;
  if ($("#table-search").length > 0 && $(".dataTables_filter").length > 0) {
    var searchTableVal = $(".dataTables_filter input").val();
    $("#table-search").val(searchTableVal);
    var searchVal = $("#table-search").val();
    table.search(searchVal, true).draw();
  }

  $("#table-search").on("keyup", function () {
    table.search(this.value, true).draw();
  });
  table.on("draw.dt", function () {
    $("body").find("input:not(.icheck-input):not(.switch__checkbox)").iCheck({
      checkboxClass: "checkbox-styled",
      radioClass: "radio-styled",
      increaseArea: "40%",
    });
    checkAll();
  });
});
jQuery(document).ready(function () {
  var table = jQuery("#tableTicketsList").removeClass("hidden").DataTable();
  table.order(3, "desc");
  table.draw();
  jQuery(".table-container").removeClass("loading");
  jQuery("#tableLoading").addClass("hidden");
});

if (typeof(buildFilterRegex) !== "function") {
  function buildFilterRegex(filterValue) {
      if (filterValue.indexOf('&') === -1) {
          return '[>]\\s*' + jQuery.fn.dataTable.util.escapeRegex(filterValue) + '\\s*[<]';
      } else {
          var tempDiv = document.createElement('div');
          tempDiv.innerHTML = filterValue;
          return '\\s*' + jQuery.fn.dataTable.util.escapeRegex(tempDiv.innerText) + '\\s*';
      }
  }
}
jQuery(document).ready(function () {
  jQuery(".view-filter-btns .dropdown-menu a").click(function(e) {
      var filterValue = jQuery(this).find("span").data('value');
      var filterText = jQuery(this).find("span").html().trim();
      var dataTable = jQuery('#tableTicketsList').DataTable();
      var filterValueRegex;
      $(this).closest('.dropdown-menu').find('.active').removeClass('active');
      $(this).parent().addClass('active');
      $(this).closest('.view-filter-btns').find('.dropdown-toggle span').text(filterText);
      if (filterValue == "all") {
          dataTable.column(2).search('').draw();
          } else {
          filterValueRegex = buildFilterRegex(filterValue);
          dataTable.column(2)
              .search(filterValueRegex, true, false, false)
              .draw();
      }
      // Prevent jumping to the top of the page
      // when no matching tag is found.
      e.preventDefault();
  });
});
function checkAll(){
  let checkAll = $('#selectAll');
  let checkboxes = $('.domids').not(':disabled');
  checkAll.on('ifChecked ifUnchecked', function(e) {
      if (e.type == 'ifChecked') {
          checkboxes.iCheck('check');
      } else {
          checkboxes.iCheck('uncheck');
      }
  });
  checkboxes.on('ifChanged', function(e){
      if(checkboxes.filter(':checked').length > 0){
          $('#domainSelectedCounter').addClass('badge--primary');
          $('.bottom-action-sticky').css('opacity' , '1');
          $('body').addClass('is-actions');
      }
      else{
          $('#domainSelectedCounter').removeClass('badge--primary');
          $('.bottom-action-sticky').css('opacity' , '0');
          $('body').removeClass('is-actions');
      }
      $('#domainSelectedCounter').text(checkboxes.filter(':checked').length);
      if(checkboxes.filter(':checked').length == checkboxes.length) {
          checkAll.prop('checked', 'checked');
      } else {
          checkAll.removeProp('checked');
      }
      checkAll.iCheck('update');
  });
};

var alreadyReady = false; // The ready function is being called twice on page load.
jQuery(document).ready( function () {

  var table = jQuery("#tableTicketsList").DataTable({
      "dom": '<"listtable"fit>pl',                "info": false,                "responsive": true,
      "oLanguage": {
          "sEmptyTable":     "Ningun ticket encontrado",
          "sInfo":           "Mostrando START para END de TOTAL tickets",
          "sInfoEmpty":      "Mostrando 0 para 0 de 0 tickets",
          "sInfoFiltered":   "(Filtro de MAX tickets)",
          "sInfoPostFix":    "",
          "sInfoThousands":  ",",
          "sLengthMenu":     "Mostrar MENU entradas",
          "sLoadingRecords": "Cargando...",
          "sProcessing":     "Procesando...",
          "sSearch":         "",
          "sZeroRecords":    "Ningun ticket encontrado",
          "oPaginate": {
              "sFirst":    "Primero",
              "sLast":     "Últímo",
              "sNext":     "Siguiente",
              "sPrevious": "Anterior"
          }
      },
      "pageLength": 10,
      "order": [
          [ 0, "asc" ]
      ],
      "lengthMenu": [
          [10, 25, 50, -1],
          [10, 25, 50, "Todos"]
      ],
      "aoColumnDefs": [
          {
              "bSortable": false,
              "aTargets": [  ]
          },
          {
              "sType": "string",
              "aTargets": [ 2 ]
          }
      ],
      "stateSave": true,
      "autoWidth": false,
  });
      
              // highlight remembered filter on page re-load
  var rememberedFilterTerm = table.state().columns[2].search.search;
  if (rememberedFilterTerm && !alreadyReady) {
  
      // This should only run on the first "ready" event.
      jQuery(".view-filter-btns a span").each(function(index) {
          if (buildFilterRegex(jQuery(this).text().trim()) == rememberedFilterTerm) {
              $(this).closest('li').addClass('active');
              $(this).closest('.view-filter-btns').find('.dropdown-toggle span').text(jQuery(this).text());
          }
      });
  }
          alreadyReady = true;
   if ($('#table-search').length > 0 && $('.dataTables_filter').length > 0){
      var searchTableVal = $('.dataTables_filter input').val();
      $('#table-search').val(searchTableVal);
      var searchVal = $('#table-search').val();
      table.search(searchVal, true).draw();
  }

  $('#table-search').on('keyup', function () {
      table.search(this.value, true).draw();
  });
  table.on('draw.dt', function () {
      $('body').find('input:not(.icheck-input):not(.switch__checkbox)').iCheck({
          checkboxClass: 'checkbox-styled',
          radioClass: 'radio-styled',
          increaseArea: '40%'
      });
      checkAll();

  });


});
jQuery(document).ready( function ()
  {
      var table = jQuery('#tableTicketsList').removeClass('hidden').DataTable();
                          table.order(3, 'desc');
                      table.draw();
      jQuery('.table-container').removeClass('loading');
      jQuery('#tableLoading').addClass('hidden');

  });
